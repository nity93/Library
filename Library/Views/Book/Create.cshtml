@model Library.Models.ViewModels.BookViewModel

<h2>Create Book</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
       
        <hr/>
        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Book.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Book.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Book.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Book.AuthorID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Book.AuthorID, new SelectList(Model.Authors, "ID", "FullName", new { htmlAttributes = new { @class = "form-control" } }))
                <a href="#" id="newAuthor">New</a>
                @Html.ValidationMessageFor(model => model.Book.AuthorID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div id="newAuthorForm">
            <div class="form-group">
                @Html.LabelFor(model => model.Author.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Author.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Author.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Author.LastName, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
        </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Book.ISBN, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Book.ISBN, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Book.ISBN, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Book.NumberOfPages, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Book.NumberOfPages, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Book.NumberOfPages, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    @Html.ActionLink("Go Back", "Index", null, new { @class = "btn btn-default" }) |
                    <input type="submit" value="Create" class="btn btn-success" />
                </div>
            </div>
        </div>
}
@section Scripts {
    <script type="text/javascript">
        $("#newAuthorForm").hide();
        $("#newAuthor").click(function () {
            $('#newAuthorForm').toggle();
            $("#Author_FirstName").focus();
        });
    </script>
    @Scripts.Render("~/bundles/jqueryval")
}
